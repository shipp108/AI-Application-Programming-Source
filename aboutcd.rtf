{\rtf1\mac\ansicpg10000\uc1 \deff0\deflang1033\deflangfe1033{\upr{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fnil\fcharset256\fprq2{\*\panose 02070309020205020404}Courier New;}}{\*\ud{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fnil\fcharset256\fprq2{\*\panose 02070309020205020404}Courier New;}}}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\s1\keepn\widctlpar\outlinelevel0\adjustright \fs32\cgrid \sbasedon0 \snext0 heading 1;}{\s2\sl480\slmult1\keepn\widctlpar\outlinelevel1\adjustright \fs28\cgrid \sbasedon0 \snext0 heading 2;}{\s3\sl480\slmult1\keepn\widctlpar\outlinelevel2\adjustright \cgrid \sbasedon0 \snext0 heading 3;}{\*\cs10 \additive Default Paragraph Font;}{\s15\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\adjustright \f2\fs20\cgrid \sbasedon0 \snext15 HTML Preformatted;}}{\info{\title Appendix A \'d0 About the CD-ROM}{\author M. Tim Jones}{\operator david f pallai}{\creatim\yr2003\mo1\dy12\hr20\min7}{\revtim\yr2003\mo1\dy14\hr16\min49}{\version4}{\edmins6}{\nofpages5}{\nofwords922}{\nofchars5258}{\*\company spamco}{\nofcharsws6457}{\vern115}}\widowctrl\ftnbj\aenddoc\revisions\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\viewkind1\viewscale124\viewzk2\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \fs32\cgrid {About the CD-ROM\par }\pard \s1\sl480\slmult1\keepn\widctlpar\outlinelevel0\adjustright {\par }\pard\plain \sl480\slmult1\widctlpar\adjustright \fs20\cgrid {\fs24 The CD-ROM contains a number of useful applications that demonstrate the properties of AI algorithmic techniques and methods. The methods and applications that demonstrate them are noted in this section.\par \par }\pard\plain \s2\sl480\slmult1\keepn\widctlpar\outlinelevel1\adjustright \fs28\cgrid {Simulated Annealing\par }\pard\plain \sl480\slmult1\widctlpar\adjustright \fs20\cgrid {\fs24 Simulated annealing, or modeling of systematic cooling of a molten metal to a solid, is described in Chapter 2. The theoretical N-Queens problem is used to demonstrate the constraint satisfaction properties of the algorithm. The algorithm and application can be found on the CD-ROM at }{\f2 ./software/ch2}{\fs24 .\par \par }\pard\plain \s3\sl480\slmult1\keepn\widctlpar\outlinelevel2\adjustright \cgrid {\fs28 Adaptive Resonance Theory\par }\pard\plain \sl480\slmult1\widctlpar\adjustright \fs20\cgrid {\fs24 Adaptive Resonance Theory, also called ART-1, is a clustering algorithm that provides the ability to separate (or cluster) elements in a data set into independent data sets based upon properties of the individual data items. The algorithm does this in an unsupervised manner, allowing the algorithm to find patterns in the data that a user may not notice. The practical problem of personalization is used to demonstrate ART1 in the context of a recommender  system in Chapter 3. The algorithm and application can be found on the CD-ROM at }{\f2 ./software/ch3}{\fs24 .\par \par }\pard\plain \s2\sl480\slmult1\keepn\widctlpar\outlinelevel1\adjustright \fs28\cgrid {Ant Algorithms\par }\pard\plain \sl480\slmult1\widctlpar\adjustright \fs20\cgrid {\fs24 Ant algorithms are a relatively new method that can be used to identify optimal paths through a graph. This method is described in Chapter 4. Ant algorithms model the movement of ants within an environment and use simulated pheromone  to communicate with other ants (the process of stigmergy). The theoretical problem of the Traveling Salesman Problem (or TSP) is used to demonstrate the ant algorithm. The algorithm and application can be found on the CD-ROM at }{\f2 ./software/ch4}{\fs24 .\par \par }\pard\plain \s3\sl480\slmult1\keepn\widctlpar\outlinelevel2\adjustright \cgrid {\fs28 Backpropagation Algorithm\par }\pard\plain \sl480\slmult1\widctlpar\adjustright \fs20\cgrid {\fs24 The backpropagation algorithm, discussed in Chapter 5, is one of the primary methods used to train multi-layer neural networks given a training set and a set of desired outputs.  Backpropagation propagates errors back through the nodes of a network, altering the weights of the connections based upon the error of the actual and desired outputs.  The interesting problem of training game neurocontrollers (game AI) is used to demonstrate backpropagation. Given a simple neural network, a set of environmental inputs and a set of allowable actions (otherwise known as the training set), the algorithm trains the network to perform the desired action for the current environment. It is then demonstrated that the neurocontroller is able to generalize and perform useful behaviors for unforeseen environments. The backpropagation algorithm and neurocontroller application can be found on the CD-ROM at }{\f2 ./software/ch5}{\fs24 .\par \par }\pard\plain \s3\sl480\slmult1\keepn\widctlpar\outlinelevel2\adjustright \cgrid {\fs28 Genetic Algorithms / Genetic Programming\par }\pard\plain \sl480\slmult1\widctlpar\adjustright \fs20\cgrid {\fs24 Genetic algorithms provide a novel optimization technique that can be applied to both numerical and symbolic problems, and is described in Chapter 6. The subfield of Genetic programming is further used to illustrate the creation of instruction sequences to solve problems in code generation. Sequences of instructions are evolved to solve mathematical functions, and it is demonstrated how these sequences can find novel strings that are both interesting and optimal given a simple virtual machine. The genetic programming algorithm and application can be found on the CD-ROM at }{\f2 ./software/ch6}{\fs24 .\par \par }{\fs28 Artificial Life / Evolving Neural Networks\par }{\fs24 Artificial life is studied here in the context of neural networks through evolution of simple organisms in a synthetic environment and is described in Chapter 7. Organisms survive through successfully existing within their environment, avoiding prey and foraging for food. Organisms are permitted to reproduce, once they reach a high enough level of internal energy. Therefore, reproduction is only permitted if organisms can survive within the environment, which should lead to more fit organisms. The organisms are provided with multi-layer neural networks as their neurocontrollers, and given two different types of organisms, illustrate simple food-web organizations. The artificial life application can be found on the CD-ROM at }{\f2 ./software/ch7}{\fs24 .\par \par }\pard\plain \s2\sl480\slmult1\keepn\widctlpar\outlinelevel1\adjustright \fs28\cgrid {Expert Systems\par }\pard\plain \sl480\slmult1\widctlpar\adjustright \fs20\cgrid {\fs24 Rules-based systems are the topic of Chapter 8, which emphasis and implementation of a forward-chaining system. Varieties of examples are provided, in the form of rules and initial facts, with a final example of embedded the rules-based system into an embedded system and utilizing it for sensor fault-tolerance. The forward-chaining rules-based system and application files can be found on the CD-ROM at }{\f2 ./software/ch8}{\fs24 .\par \par }\pard\plain \s2\sl480\slmult1\keepn\widctlpar\outlinelevel1\adjustright \fs28\cgrid {Fuzzy Logic\par }\pard\plain \sl480\slmult1\widctlpar\adjustright \fs20\cgrid {\fs24 In Chapter 9, fuzzy logic and fuzzy control are described including an implementation of a fuzzy API for inclusion into other applications. The API provides not only the standard fuzzy operators, but also helper functions that support the simple creation of fuzzy membership functions. The fuzzy logic API and a simple battery charger example is provided on the CD-ROM at }{\f2 ./software/ch9}{\fs24 .\par \par }\pard\plain \s2\sl480\slmult1\keepn\widctlpar\outlinelevel1\adjustright \fs28\cgrid {Hidden Markov Models\par }\pard\plain \sl480\slmult1\widctlpar\adjustright \fs20\cgrid {\fs24 Hidden Markov models are the topic of Chapter 10, which are networks that include states and transitions with associated probabilities. The outcome, or observation, of a state is generated based upon the associated probability distribution. The action is performed, made visible, though the internal state is hidden, thus the hidden aspect of the Markov model. Hidden Markov models have a variety of applications; in Chapter 10 we look at the generation of meaningful text based upon training by a corpus. The HMM and a text generation example is provided on the CD-ROM at }{\f2 ./software/ch10}{\fs24 .\par \par \par }\pard\plain \s2\sl480\slmult1\keepn\widctlpar\outlinelevel1\adjustright \fs28\cgrid {Intelligent Agents\par }\pard\plain \sl480\slmult1\widctlpar\adjustright \fs20\cgrid {\fs24 Intelligent agents are the final topic in Chapter 11, with emphasis on search and filtering agents. Intelligent agents are applied in a number of different ways; the application chosen for this chapter is a filtering agent that acts as an intermediary to UseNet sites on the Internet. The WebAgent is configured through a simple configuration file. It then autonomously gathers news using the NNTP protocol and presents it to the user with the HTTP protocol (acting as a simple web server). The WebAgent is provided on the CD-ROM at }{\f2 ./software/ch11}{\fs24 .\par }\pard\plain \s15\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\adjustright \f2\fs20\cgrid {\par }\pard\plain \s1\sl480\slmult1\keepn\widctlpar\outlinelevel0\adjustright \fs32\cgrid {System Requirements\par }\pard\plain \sl480\slmult1\widctlpar\adjustright \fs20\cgrid {\fs24 Applications on this CD-ROM require a PC with Windows 95, 98, 2000, Me, or XP using the Cygwin UNIX environment (freely downloadable at }{\i\fs24 www.cygwin.com}{\fs24 ), or Linux (Red Hat 6.1 or later, or comparable Linux distribution); 486 or higher CPU; 64MB RAM; 60MB disk space; CD-ROM drive; Internet access and Web browser (for the WebAgent example).\par \par }}